#include<bits/stdc++.h>
using namespace std;


/*
只统计每一个非零段的左端点（对应递增情况，否则对应递减情况）。
新增一个非零段左端点的情况是：该点的左侧被淹没，但该点未被淹没。
想象 p = 0 逐一变大的场景
于是如果 a[i] > a[i-1]
那么当 p = a[i-1] 时，左侧一点正式被淹没
当	 p = a[i] 时，本点正式被淹没
所以当 p = a[i-1] 时，新增一个非零段的左端点
	当 p = a[i]   时，新减一个非零段的左端点
为了统计 p 在不同值时左端点的数量，可以采用差分数组
上述情况就是：a[i-1] ~ a[i] - 1 的区间内 +1
最后统计前缀和，即可得出最多左端点的数量

*/

int A[500010] = {  0  };
int B[10005] = {  0  };

int main() {
	int n;
	scanf("%d", &n);
	for (int i = 1; i <= n; ++i) {
		scanf("%d", &A[i]);
		if (A[i] > A[i - 1]) {
			B[A[i - 1]]++;
			B[A[i]]--;
		}
	}

	int ans = 0, t = 0;
	for (int i = 0; i <= 10005; ++i) {
		t += B[i];
		ans = max(t, ans);
	}
	cout << ans;

	return 0;
}
